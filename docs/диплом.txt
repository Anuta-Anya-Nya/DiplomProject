Введение
Практически каждый человек в современном мире пользуется компьютером, смартфоном, планшетом с выходом в интернет. Люди черпают в нем информацию, решают повседневные задачи, выполняют различные действия. Таким образом, интернет и веб-приложения стали обязательным элементом нашей жизни. Постоянно мы пользуемся большим числом приложений, которые направлены на облегчение нашей жизни, упрощающие постоянные действия и экономя наше время. 
Например, многие женщины регулярно посещают своего мастера по маникюру, парикмахера, косметолога. Для записи  к нужному специалисту необходимо минимум раз в месяц звонить в салон для записи. А если необходимо перенести запись или отменить? Снова надо позвонить. Когда таких специалистов много, такие звонки занимают уйму времени. Намного проще, если у салона красоты есть свое веб-приложение. С его помощью можно записаться на процедуру, отменить и перенести запись, просмотреть расписание мастера или список мастеров, которые работают в определнный день и время. Такое приложение сэкономит время как клиента, так и администратора салона, который не будет отвечать на постоянные телефонные звонки, а сможет просмотреть все созданные записи к  мастерам, а, при необходимости, самостоятельно записать клиента и отредактировать созданные записи. 
Таким образом, целью данной работы является создание веб-приложения для салона красоты, реализующего функции записи к специалисту, переноса или удаления записи, реализация личных кабинетов для клиентов и администратора салона.






ПЛАН
Подготовка к созданию веб-приложения салона красоты
	Первой ступенью для создания веб-приложения является выбор языка программирования. Для написания приложения можно использовать различные языки. Мое приложение будет написано на 	языке JavaScript.	
	После выбора языка, необходимо настроить среду разработки. Для разработки веб-приложения на JS удобнее всего пользоваться Visual Studio Code. 
	Для моего приложения потребуется база данных для хранения данных салона. Я буду пользоваться MySQL.


Написать почему выбран JS, MySQL


Создание структуры приложения
	Следующей ступенью после подготовки окружения и выбора языка программирования, необходимо определиться с функциональностью приложения и создать базовую структуру проекта.
	Необходимо создать марштуры и контроллеры. Маршруты определяют, какие страницы и функциональность будут доступны в прилолжении, а контроллеры обрабатывают запросы пользователя и совершают необходимые действияю




Создание пользовательского интерфейса
	Для взаимодействия с конечныи пользователем, любому веб-приложению необходимо иметь пользовательский интерфейсю Это важная часть любого приложения, потому что это видимая простому пользованелю часть приложения, которая должна быть понятной, функциональной и эстетичной. Поэтому на донном этапе необходимо определитьсы с дизайном и создать соответствующие шаблоны и страницы. Страницы будут написаны с помощью HTML, CSS, а JS будет использован для улучшения пользовательнского мнтерфейса.




Создание логики приложения
	Главной частью каждого веб-приложения является бизнес-логика. Необходимо определить и описать функциональность создаваемого приложения, а далее создать соответствующие классы и методы, котоые будут совершать необходимые действия.
В моем приложении будут реализованы функции:
в личном кабинете клиента:
1. запись на конкретную процедуру
2. запись к конкретному мастеру
3. просмотр информации, по фильтру, который пользователь выбирает самостоятельно
4. перенос записи
5. отмена записи
В личном кабинете администратора салона:
1. просмотр информации, по фильтру, который администратор выбирает самостоятельно
2. запись клиента на конкретную процедуру
3. запись клиента к конкретному мастеру
4. перенос записи
5. отмена записи
6. просмотр аккаунтов клиентов, возможность добавления заметок
Кроме этого, необходимо логирование всех действий с приложением??



Тестирование приложения

После создания пользовательского интерфейса и написания логики, необходимо протестировать приложение. Это следует делать для того, чтобы выявить неверную работу приложения, различные недоработки и баги.




Развертывания созданного прилолжения


Создание моего приложения завешено. Написана фронт-энд часть, бэкенд часть, протестирована работа приложения. Заершающей части работы является развертывание приложения, для того, чтобы оно стало доступно пользователям для использования. Существует множество вариантов развертывания. Я выбрала???????



ОСНОВНАЯ ЧАСТЬ
1. 
Для пользователя важно видеть доступный и понятный интерфейс. кроме этого визуально приложение должно быть эстетичным. Поэтому перед версткой, необходимо создать дизайн-проект визуальной части приложения. Дизайнер создает проект в программе Figma, после утверждения этого проекта можно начать верстать страницы приложения. 
Для начала создаем файлы index.html и style.scss. В моей работе я буду пользоваться препроцессором SASS??? описать преимущества препроцессоров.
При настройке для работы в VSCode удобно пользоваться расширением Emmet
для создания странички html достаточно ввести ! и расширение само создаст минимальную страницу
как подключить шрифты





ВЫВОДЫ


СПИСК ИСПОЛЬЗУЕМОЙ ЛИТЕРАТУРЫ